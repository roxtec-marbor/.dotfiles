alias ls='ls --color=auto'
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias mkdir='mkdir -p'
alias open='explorer.exe'
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
alias gpr='git pull --rebase'
alias gsu='git submodule update --init --recursive'
alias gcb='gcloud builds submit --config cloudbuild.yml'
alias winhome='cd /mnt/c/Users/USR'

alias dockerstart='sudo service docker start'
alias dockerstop='sudo service docker stop'
alias vim-install='vim +PluginInstall +qall'


#!/bin/bash

curl --url "" \
--header "content-type: application/x-www-form-urlencoded" \
--data grant_type="client_credentials" \
--data client_id="" \
--data client_secret="" \
--data audience="" | jq ."access_token" | sed 's/\"//g' | clip.exe





decode_base64_url() {
  local len=$((${#1} % 4))
  local result="$1"
  if [ $len -eq 2 ]; then result="$1"'=='
  elif [ $len -eq 3 ]; then result="$1"'=' 
  fi
  echo "$result" | tr '_-' '/+' | openssl enc -d -base64
}

decode_jwt(){
  echo ""
  echo "Header:"
  decode_base64_url $(echo -n $1 | cut -d "." -f 1) | jq .
  echo "Payload:"
  decode_base64_url $(echo -n $1 | cut -d "." -f 2) | jq .
}

decode_jwt $1
